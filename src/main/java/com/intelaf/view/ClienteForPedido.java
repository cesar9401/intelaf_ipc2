package com.intelaf.view;

import com.intelaf.controller.MainControl;
import com.intelaf.model.*;
import java.util.List;

/**
 *
 * @author cesar31
 */
public class ClienteForPedido extends javax.swing.JPanel {

    private final double DOSX100 = 0.02; 
    private final double CINCOX100 = 0.05; 

    private MainControl control;
    private Cliente cliente;
    private List<Producto> productosCliente;
    private double total;
    private double min;
    private Tiempo tiempo;

    //Atributos procesar pedidos
    private Pedido pedido;
    private boolean isPedido;
    private double saldo;
    private double newCredito;

    /**
     * Creates new form createCliente
     */
    public ClienteForPedido() {
        initComponents();
        this.isPedido = false;
    }

    public void initializeControl(MainControl control, List<Producto> productosCliente, double total, double min, Tiempo tiempo) {
        this.control = control;
        this.productosCliente = productosCliente;
        this.total = total;
        this.min = min;
        this.tiempo = tiempo;
        totalLabel.setText("Total: Q" + this.total);
        minimoLabel.setText("Anticipo minimo: Q" + this.min);
    }

    public void initializeControlForPedido(MainControl control, Pedido pedido, Cliente cliente) {
        this.control = control;
        this.pedido = pedido;
        this.cliente = cliente;
        this.isPedido = true;

        this.saldo = this.pedido.getTotalPedido() - this.pedido.getAnticipo();
        this.saldo = Math.round(this.saldo*100)/100D;

        //Ocultar elementos no necesarios
        this.minimoLabel.setVisible(false);
        this.nitText.setEditable(false);
        if(this.cliente.getCreditoCompra() == 0 ) {
            this.anticipoCreditoText.setEnabled(false);
        }
        
        this.newCredito = getCredito();

        this.anticipoCreditoL.setText("Credito Q.");
        this.anticipoLabel.setText("Efectivo Q.");
        this.totalLabel.setText("Saldo: Q" + this.saldo);
        this.anticipoEfectivoText.setText(String.valueOf(this.saldo));
        
        
        this.setDatos();
    }
  
    private double getCredito() {
        double credit = 0;
        boolean dos = true;
        if(!pedido.isaTiempo()) {
            if(this.saldo > 0) {
                //Write your code for 2%
                credit = pedido.getTotalPedido() * DOSX100; 
            } else {
                //Write your code for 5%
                credit = pedido.getTotalPedido() * CINCOX100;
                dos = false;
            }
        }
        credit = Math.round(credit * 100)/100D;
        if(credit > 0) {
            String msj = "Ganancia del " + (dos ? "2%" : "5%") +  " = " + credit;
            informacionLabel.setText(msj);
        }
        
        return credit;
    }    

    private void setDatos() {
        if (cliente != null) {
            if (isPedido) {
                nitText.setText(cliente.getNit());
            }
            nombreText.setText(cliente.getNombre());
            telefonoText.setText(cliente.getTelefono());
            dpiText.setText((cliente.getDpi() != null) ? cliente.getDpi() : "");
            emailText.setText((cliente.getEmail() != null) ? cliente.getEmail() : "");
            direccionText.setText((cliente.getDireccion() != null) ? cliente.getDireccion() : "");
            creditoClienteLabel.setText("Credito Disponible: Q" + cliente.getCreditoCompra());
        } else {
            nombreText.setText("");
            telefonoText.setText("");
            dpiText.setText("");
            emailText.setText("");
            direccionText.setText("");
            creditoClienteLabel.setText("Credito Disponible: Q0.00");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        informacionLabel = new javax.swing.JLabel();
        nitLabel = new javax.swing.JLabel();
        nitText = new javax.swing.JTextField();
        nombreLabel = new javax.swing.JLabel();
        nombreText = new javax.swing.JTextField();
        telefonoLabel = new javax.swing.JLabel();
        telefonoText = new javax.swing.JTextField();
        dpiLabel = new javax.swing.JLabel();
        dpiText = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        direccionLabel = new javax.swing.JLabel();
        direccionText = new javax.swing.JTextField();
        totalLabel = new javax.swing.JLabel();
        aceptarButton = new javax.swing.JButton();
        buscarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        anticipoLabel = new javax.swing.JLabel();
        anticipoEfectivoText = new javax.swing.JTextField();
        minimoLabel = new javax.swing.JLabel();
        anticipoCreditoL = new javax.swing.JLabel();
        anticipoCreditoText = new javax.swing.JTextField();
        creditoClienteLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(248, 147, 31));
        setForeground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(600, 450));
        setPreferredSize(new java.awt.Dimension(600, 450));

        informacionLabel.setBackground(new java.awt.Color(248, 147, 31));
        informacionLabel.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        informacionLabel.setForeground(new java.awt.Color(0, 0, 0));
        informacionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        informacionLabel.setText("Informacion del Cliente");
        informacionLabel.setToolTipText("");
        informacionLabel.setMaximumSize(new java.awt.Dimension(300, 30));
        informacionLabel.setMinimumSize(new java.awt.Dimension(300, 30));
        informacionLabel.setPreferredSize(new java.awt.Dimension(300, 30));

        nitLabel.setBackground(new java.awt.Color(248, 147, 31));
        nitLabel.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        nitLabel.setForeground(new java.awt.Color(0, 0, 0));
        nitLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nitLabel.setText("NIT");
        nitLabel.setMaximumSize(new java.awt.Dimension(50, 24));
        nitLabel.setMinimumSize(new java.awt.Dimension(50, 24));
        nitLabel.setPreferredSize(new java.awt.Dimension(50, 24));

        nitText.setBackground(new java.awt.Color(255, 255, 255));
        nitText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        nitText.setForeground(new java.awt.Color(0, 0, 0));
        nitText.setMinimumSize(new java.awt.Dimension(150, 30));
        nitText.setPreferredSize(new java.awt.Dimension(150, 30));
        nitText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nitTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nitTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nitTextKeyTyped(evt);
            }
        });

        nombreLabel.setBackground(new java.awt.Color(248, 147, 31));
        nombreLabel.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        nombreLabel.setForeground(new java.awt.Color(0, 0, 0));
        nombreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nombreLabel.setText("Nombre");
        nombreLabel.setMaximumSize(new java.awt.Dimension(90, 24));
        nombreLabel.setMinimumSize(new java.awt.Dimension(90, 24));
        nombreLabel.setPreferredSize(new java.awt.Dimension(90, 24));

        nombreText.setBackground(new java.awt.Color(255, 255, 255));
        nombreText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        nombreText.setForeground(new java.awt.Color(0, 0, 0));
        nombreText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nombreText.setMinimumSize(new java.awt.Dimension(402, 30));
        nombreText.setPreferredSize(new java.awt.Dimension(402, 30));

        telefonoLabel.setBackground(new java.awt.Color(248, 147, 31));
        telefonoLabel.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        telefonoLabel.setForeground(new java.awt.Color(0, 0, 0));
        telefonoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        telefonoLabel.setText("Telefono");
        telefonoLabel.setMaximumSize(new java.awt.Dimension(90, 24));
        telefonoLabel.setMinimumSize(new java.awt.Dimension(90, 24));
        telefonoLabel.setPreferredSize(new java.awt.Dimension(90, 24));

        telefonoText.setBackground(new java.awt.Color(255, 255, 255));
        telefonoText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        telefonoText.setForeground(new java.awt.Color(0, 0, 0));
        telefonoText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        telefonoText.setMinimumSize(new java.awt.Dimension(150, 30));
        telefonoText.setPreferredSize(new java.awt.Dimension(150, 30));

        dpiLabel.setBackground(new java.awt.Color(248, 147, 31));
        dpiLabel.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        dpiLabel.setForeground(new java.awt.Color(0, 0, 0));
        dpiLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dpiLabel.setText("DPI");
        dpiLabel.setMaximumSize(new java.awt.Dimension(90, 24));
        dpiLabel.setMinimumSize(new java.awt.Dimension(90, 24));
        dpiLabel.setPreferredSize(new java.awt.Dimension(90, 24));

        dpiText.setBackground(new java.awt.Color(255, 255, 255));
        dpiText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        dpiText.setForeground(new java.awt.Color(0, 0, 0));
        dpiText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        dpiText.setMinimumSize(new java.awt.Dimension(150, 30));
        dpiText.setPreferredSize(new java.awt.Dimension(150, 30));

        emailLabel.setBackground(new java.awt.Color(248, 147, 31));
        emailLabel.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        emailLabel.setForeground(new java.awt.Color(0, 0, 0));
        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailLabel.setText("Email");
        emailLabel.setMaximumSize(new java.awt.Dimension(90, 24));
        emailLabel.setMinimumSize(new java.awt.Dimension(90, 24));
        emailLabel.setPreferredSize(new java.awt.Dimension(90, 24));

        emailText.setBackground(new java.awt.Color(255, 255, 255));
        emailText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        emailText.setForeground(new java.awt.Color(0, 0, 0));
        emailText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        emailText.setMinimumSize(new java.awt.Dimension(402, 30));
        emailText.setPreferredSize(new java.awt.Dimension(402, 30));

        direccionLabel.setBackground(new java.awt.Color(248, 147, 31));
        direccionLabel.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        direccionLabel.setForeground(new java.awt.Color(0, 0, 0));
        direccionLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        direccionLabel.setText("Direccion");
        direccionLabel.setMaximumSize(new java.awt.Dimension(90, 24));
        direccionLabel.setMinimumSize(new java.awt.Dimension(90, 24));
        direccionLabel.setPreferredSize(new java.awt.Dimension(90, 24));

        direccionText.setBackground(new java.awt.Color(255, 255, 255));
        direccionText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        direccionText.setForeground(new java.awt.Color(0, 0, 0));
        direccionText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        direccionText.setMinimumSize(new java.awt.Dimension(402, 30));
        direccionText.setPreferredSize(new java.awt.Dimension(402, 30));

        totalLabel.setBackground(new java.awt.Color(248, 147, 31));
        totalLabel.setFont(new java.awt.Font("sansserif", 3, 16)); // NOI18N
        totalLabel.setForeground(new java.awt.Color(0, 0, 0));
        totalLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        totalLabel.setText("Total");
        totalLabel.setToolTipText("");
        totalLabel.setMaximumSize(new java.awt.Dimension(150, 24));
        totalLabel.setMinimumSize(new java.awt.Dimension(150, 24));
        totalLabel.setPreferredSize(new java.awt.Dimension(150, 24));

        aceptarButton.setBackground(new java.awt.Color(0, 0, 0));
        aceptarButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        aceptarButton.setForeground(new java.awt.Color(248, 147, 31));
        aceptarButton.setText("Aceptar");
        aceptarButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(248, 117, 12)));
        aceptarButton.setMinimumSize(new java.awt.Dimension(125, 32));
        aceptarButton.setPreferredSize(new java.awt.Dimension(125, 32));
        aceptarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarButtonActionPerformed(evt);
            }
        });

        buscarButton.setBackground(new java.awt.Color(0, 0, 0));
        buscarButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        buscarButton.setForeground(new java.awt.Color(248, 147, 31));
        buscarButton.setText("Buscar");
        buscarButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(248, 117, 12)));
        buscarButton.setMaximumSize(new java.awt.Dimension(90, 25));
        buscarButton.setMinimumSize(new java.awt.Dimension(90, 32));
        buscarButton.setPreferredSize(new java.awt.Dimension(90, 32));
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        cancelarButton.setBackground(new java.awt.Color(0, 0, 0));
        cancelarButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        cancelarButton.setForeground(new java.awt.Color(248, 147, 31));
        cancelarButton.setText("Cancelar");
        cancelarButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(248, 117, 12)));
        cancelarButton.setMinimumSize(new java.awt.Dimension(125, 32));
        cancelarButton.setPreferredSize(new java.awt.Dimension(125, 32));
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        anticipoLabel.setBackground(new java.awt.Color(248, 147, 31));
        anticipoLabel.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        anticipoLabel.setForeground(new java.awt.Color(0, 0, 0));
        anticipoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        anticipoLabel.setText("Anticipo Q.");
        anticipoLabel.setMaximumSize(new java.awt.Dimension(90, 24));
        anticipoLabel.setMinimumSize(new java.awt.Dimension(90, 24));
        anticipoLabel.setPreferredSize(new java.awt.Dimension(90, 24));

        anticipoEfectivoText.setBackground(new java.awt.Color(255, 255, 255));
        anticipoEfectivoText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        anticipoEfectivoText.setForeground(new java.awt.Color(0, 0, 0));
        anticipoEfectivoText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        anticipoEfectivoText.setMinimumSize(new java.awt.Dimension(150, 30));
        anticipoEfectivoText.setPreferredSize(new java.awt.Dimension(150, 30));
        anticipoEfectivoText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anticipoEfectivoTextKeyReleased(evt);
            }
        });

        minimoLabel.setBackground(new java.awt.Color(248, 147, 31));
        minimoLabel.setForeground(new java.awt.Color(255, 0, 0));
        minimoLabel.setText("Anticipo Minimo: Q");
        minimoLabel.setMaximumSize(new java.awt.Dimension(240, 17));
        minimoLabel.setMinimumSize(new java.awt.Dimension(240, 17));
        minimoLabel.setPreferredSize(new java.awt.Dimension(240, 17));

        anticipoCreditoL.setBackground(new java.awt.Color(248, 147, 31));
        anticipoCreditoL.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        anticipoCreditoL.setForeground(new java.awt.Color(0, 0, 0));
        anticipoCreditoL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        anticipoCreditoL.setText("Ant. Credito");
        anticipoCreditoL.setMaximumSize(new java.awt.Dimension(90, 24));
        anticipoCreditoL.setMinimumSize(new java.awt.Dimension(90, 24));
        anticipoCreditoL.setPreferredSize(new java.awt.Dimension(90, 24));

        anticipoCreditoText.setBackground(new java.awt.Color(255, 255, 255));
        anticipoCreditoText.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        anticipoCreditoText.setForeground(new java.awt.Color(0, 0, 0));
        anticipoCreditoText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        anticipoCreditoText.setMinimumSize(new java.awt.Dimension(150, 30));
        anticipoCreditoText.setPreferredSize(new java.awt.Dimension(150, 30));
        anticipoCreditoText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anticipoCreditoTextKeyReleased(evt);
            }
        });

        creditoClienteLabel.setBackground(new java.awt.Color(248, 147, 31));
        creditoClienteLabel.setForeground(new java.awt.Color(255, 0, 0));
        creditoClienteLabel.setText("Credito Disponible: Q");
        creditoClienteLabel.setMaximumSize(new java.awt.Dimension(250, 17));
        creditoClienteLabel.setMinimumSize(new java.awt.Dimension(250, 17));
        creditoClienteLabel.setPreferredSize(new java.awt.Dimension(250, 17));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(informacionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(anticipoCreditoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(creditoClienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aceptarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(anticipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anticipoEfectivoText, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 35, Short.MAX_VALUE))
                            .addComponent(minimoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(nitText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(telefonoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(direccionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(anticipoCreditoL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nombreText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(emailText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(telefonoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dpiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dpiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(direccionText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(informacionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nitText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefonoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefonoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(direccionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anticipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anticipoCreditoL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anticipoEfectivoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anticipoCreditoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creditoClienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aceptarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo para verificar la informacion del ciente antes de procesar la
     * venta
     *
     * @param evt
     */
    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarButtonActionPerformed
        // TODO add your handling code here:
        String nit = nitText.getText();
        String nombre = nombreText.getText();
        String telefono = telefonoText.getText();
        String dpi = dpiText.getText();
        String email = emailText.getText();
        String direccion = direccionText.getText();
        String efectivoString = anticipoEfectivoText.getText();
        String creditoString = anticipoCreditoText.getText();
        if (!nit.isEmpty() && !nombre.isEmpty() && !telefono.isEmpty()) {
            double efectivo = getNumberDouble(efectivoString);
            double credito = getNumberDouble(creditoString);
            if (credito >= 0) {
                if (verificarCredito(credito)) {
                    if (efectivo >= 0) {
                        if(!isPedido){
                            double totalAnticipo = efectivo + credito;
                            if (totalAnticipo >= this.min) {
                                if (totalAnticipo <= this.total) {
                                    boolean nuevo = false;
                                    if (cliente != null) {
                                        cliente.setNombre(nombre);
                                        cliente.setTelefono(telefono);
                                        cliente.setDpi(!dpi.isEmpty() ? dpi : null);
                                        cliente.setEmail(!email.isEmpty() ? email : null);
                                        cliente.setDireccion(!direccion.isEmpty() ? direccion : null);
                                    } else {
                                        cliente = new Cliente(nombre, telefono, 0);
                                        cliente.setNit(nit);
                                        cliente.setDpi(!dpi.isEmpty() ? dpi : null);
                                        cliente.setEmail(!email.isEmpty() ? email : null);
                                        cliente.setDireccion(!direccion.isEmpty() ? direccion : null);
                                        nuevo = true;
                                    }
                                    //Enviar cliente y listado de productos para pedidos
                                    control.procesarPedido(cliente, nuevo, total, credito, efectivo, tiempo, productosCliente);
                                } else {
                                    control.crearAlerta("Advertencia", "El anticipo(Q. " + totalAnticipo + ") no puede ser mayor que el total(Q. " + this.total + ")", null);
                                }
                            } else {
                                control.crearAlerta("Error", "El anticipo minimo debe de ser: Q. " + this.min, null);
                            }
                        } else {
                            //Write your code for order here
                            credito = Math.round(credito*100)/100D;
                            double pendiente = efectivo + credito;
                            pendiente = Math.round(pendiente*100)/100D;
                            
                            if(pendiente == this.saldo) {
                                cliente.setNombre(nombre);
                                cliente.setTelefono(telefono);
                                cliente.setDpi(!dpi.isEmpty() ? dpi : null);
                                cliente.setEmail(!email.isEmpty() ? email : null);
                                cliente.setDireccion(!direccion.isEmpty() ? direccion : null);
                                
                                //Credito para modificar al credito original
                                cliente.setCreditoCompra(this.newCredito - credito);
                                
                                //Pedido entregado
                                this.pedido.setEntregado(true);
                                
                                //Enviar informacionde cliente y pedido para procesar como venta
                                control.procesarPedidoHaciaVenta(this.pedido, this.cliente, credito);
                                
                            }else {
                                control.crearAlerta("Advertencia", "El cliente tiene un saldo pendiente de " + this.saldo, null);
                            }
                        }
                    } else {
                        control.crearAlerta("Error", "El valor ingresado no es valido", null);
                        anticipoEfectivoText.setText("");
                    }
                } else {
                    control.crearAlerta("Error", "El cliente no cuenta con credito sufuciente para esta transacción", null);
                    anticipoCreditoText.setText("");
                }
            } else {
                control.crearAlerta("Error", "El valor ingresado para descuento por credito no es valido", null);
                anticipoCreditoText.setText("");
            }
        } else {
            control.crearAlerta("Error", "Debe llenar los campos nit, nombre y telefono", null);
        }
    }//GEN-LAST:event_aceptarButtonActionPerformed

    private boolean verificarCredito(double credito) {
        if (credito == 0) {
            return true;
        }

        if (cliente == null && credito > 0) {
            return false;
        }

        return cliente.getCreditoCompra() >= credito;
    }

    private double getNumberDouble(String numberString) {
        if (numberString.isEmpty() || numberString.isBlank()) {
            return 0;
        }

        try {
            return Double.parseDouble(numberString);
        } catch (NumberFormatException e) {
            return -1;
        }
    }

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        // TODO add your handling code here:
        control.closeModal();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        // TODO add your handling code here:
        String nit = nitText.getText();
        if (!nit.isEmpty()) {
            this.cliente = control.getCliente(nit);
            setDatos();
            if (this.cliente == null) {
                control.crearAlerta("Advertencia", "No hay coincidencias", null);
            } else {
                control.crearAlerta("Informacion", "El cliente: " + cliente.getNit() + " ha sido agregado", null);
            }
        } else {
            control.crearAlerta("Advertencia", "Debe llenar el campo nit", null);
        }
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void nitTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nitTextKeyReleased
        // TODO add your handling code here:
        if (!nitText.getText().isEmpty() && !nitText.getText().isBlank()) {
            this.cliente = control.getCliente(nitText.getText());
        } else {
            this.cliente = null;
        }
        setDatos();
    }//GEN-LAST:event_nitTextKeyReleased

    private void nitTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nitTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nitTextKeyPressed

    private void nitTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nitTextKeyTyped
        // TODO add your handling code here:
        if (nitText.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_nitTextKeyTyped

    private void anticipoEfectivoTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anticipoEfectivoTextKeyReleased
        // TODO add your handling code here:
        String descuento = anticipoEfectivoText.getText();
        Double credito = 0.0;
        try {
            credito = Double.parseDouble(descuento);
        } catch (NumberFormatException e) {
            anticipoEfectivoText.setText("");
        }
    }//GEN-LAST:event_anticipoEfectivoTextKeyReleased

    private void anticipoCreditoTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anticipoCreditoTextKeyReleased
        // TODO add your handling code here:
        if (isPedido) {
            String creditoString = anticipoCreditoText.getText();
            double credito;
            try {
                credito = Double.parseDouble(creditoString);
                if (credito <= this.saldo) {
                    double diff = this.saldo - credito;
                    diff = Math.round(diff * 100) / 100D;
                    anticipoEfectivoText.setText(String.valueOf(diff));
                }
            } catch (NumberFormatException e) {
                anticipoEfectivoText.setText("");
            }
        }
    }//GEN-LAST:event_anticipoCreditoTextKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JLabel anticipoCreditoL;
    private javax.swing.JTextField anticipoCreditoText;
    private javax.swing.JTextField anticipoEfectivoText;
    private javax.swing.JLabel anticipoLabel;
    private javax.swing.JButton buscarButton;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JLabel creditoClienteLabel;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JTextField direccionText;
    private javax.swing.JLabel dpiLabel;
    private javax.swing.JTextField dpiText;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel informacionLabel;
    private javax.swing.JLabel minimoLabel;
    private javax.swing.JLabel nitLabel;
    private javax.swing.JTextField nitText;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JTextField nombreText;
    private javax.swing.JLabel telefonoLabel;
    private javax.swing.JTextField telefonoText;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
